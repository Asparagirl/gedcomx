[#ftl]
[#--macro for writing a namespace page--]
[#-- @ftlvariable name="schema" type="org.codehaus.enunciate.config.SchemaInfo" --]
[#import "boilerplate.fmt" as libBoilerplate/]
[#macro writeXmlMediaTypePage mt]
  [@libBoilerplate.writeStartBody label=(mt.name + " XML")/]
  <div class="container">
    [@libBoilerplate.writeHeader]
      <ul class="xbreadcrumbs" id="breadcrumbs">
        <li><a href="Home.html" class="home">Home</a></li>
        <li>
          <a href="media-types.html">Media Types</a>
          <ul>
            <li><a href="media-types.html">Media Types</a></li>
            <li><a href="recipes.html">Recipes</a></li>
          </ul>
        </li>
        <li class="current">
          <a href="#">${mt.name} XML</a>
          <ul>
      [#list mediaTypeDeclarations as mt]
        [#if mt.xmlMediaType??]
          <li><a href="${baseProjectUri(sch)}mt_${mt.id}_xml.html">${mt.name} XML</a></li>
        [/#if]
        [#if mt.jsonMediaType??]
          <li><a href="${baseProjectUri(sch)}mt_${mt.id}_json.html">${mt.name} JSON</a></li>
        [/#if]
      [/#list]
          </ul>
        </li>
      </ul>
    [/@libBoilerplate.writeHeader]
    <div id="main" class="column first last span-20">
      <h1>${mt.name} XML</h1>

      <hr/>

      <table>
        <tr>
          <td align="right">Media Type Identifier:</td>
          <td>${mt.xmlMediaType}</td>
        </tr>
        <tr>
          <td align="right">Root Element:</td>
          <td><a href="${ns2prefix[mt.rootElement.namespace]}_el_${mt.rootElement.name}_xml.html">${mt.rootElement.name}</a></td>
        </tr>
        [#if mt.version??]
        <tr>
          <td align="right">Version:</td>
          <td>${mt.version}</td>
        </tr>
        [/#if]
        <tr>
          <td align="right">XML Schema:</td>
          <td><a href="${ns2schema[mt.rootElement.namespace].properties.filename!"#"}">${ns2schema[mt.rootElement.namespace].properties.filename!"n/a"}</a></td>
        </tr>
        [#if ns2schema[mt.rootElement.namespace].properties.rdfSchemaLocation??]
        <tr>
          <td align="right">RDF Schema:</td>
          <td><a href="${ns2schema[mt.rootElement.namespace].properties.rdfSchemaLocation}">${ns2schema[mt.rootElement.namespace].properties.rdfSchemaLocation}</a></td>
        </tr>
        [/#if]
      </table>

      ${mt.rootElement.docValue!""}

      <h3>Example</h3>
      <pre class="prettyprint lang-xml">
${generateExampleXml(mt.rootElement)?html}
      </pre>

      <h3>Data Types</h3>

      <ul>
        [#list mt.dataTypes as type]
        <li><a href="${ns2prefix[type.namespace]}_${type.name}_xml.html">${type.name}</a></li>
        [/#list]
      </ul>

      [#assign elementList=mt.elements/]
      [#if elementList?size > 0]
      <h3>Extension Elements</h3>
      
      <p>The ${mt.name} XML media type defines the following elements that may be used as extension elements:</p>
      
      <table>
        <tr>
          <th>name</th>
          <th>namespace</th>
          <th>type</th>
          <th>description</th>
        </tr>
        [#list elementList as element]
        <tr>
          <td>${element.name}</td>
          <td>${element.namespace}</td>
          [#if element.typeDefinition??]
            [#assign typeQName=element.typeDefinition.qname/]
          [#else]
            [#assign typeQName=element.elementXmlType.qname/]
          [/#if]
          [#if ns2schema[typeQName.namespaceURI]??]
          <td><a href="${baseProjectUri(typeQName.namespaceURI)}${ns2schema[typeQName.namespaceURI].id}_${typeQName.localPart}_xml.html">${typeQName.namespaceURI}${typeQName.localPart}</a></td>
          [#else]
          <td>${typeQName.localPart?lower_case}</td>
          [/#if]
          <td>${element.docValue!""}</td>
        </tr>
        [/#list]
      </table>

      [/#if]

      <div class="clear" />
    </div>
    [@libBoilerplate.writeFooter/]
  </div> <!--! end of #container -->

  [@libBoilerplate.writeEndBody/]
[/#macro]
[#macro writeJsonMediaTypePage mt]
  [@libBoilerplate.writeStartBody label=(mt.name + " JSON")/]
  <div class="container">
    [@libBoilerplate.writeHeader]
      <ul class="xbreadcrumbs" id="breadcrumbs">
        <li><a href="Home.html" class="home">Home</a></li>
        <li>
          <a href="media-types.html">Media Types</a>
          <ul>
            <li><a href="media-types.html">Media Types</a></li>
            <li><a href="recipes.html">Recipes</a></li>
          </ul>
        </li>
        <li class="current">
          <a href="#">${mt.name} JSON</a>
          <ul>
      [#list mediaTypeDeclarations as mt]
        [#if mt.xmlMediaType??]
          <li><a href="${baseProjectUri(sch)}mt_${mt.id}_xml.html">${mt.name} XML</a></li>
        [/#if]
        [#if mt.jsonMediaType??]
          <li><a href="${baseProjectUri(sch)}mt_${mt.id}_json.html">${mt.name} JSON</a></li>
        [/#if]
      [/#list]
          </ul>
        </li>
      </ul>
    [/@libBoilerplate.writeHeader]
    <div id="main" class="column first last span-20">
      <h1>${mt.name} JSON</h1>

      <hr/>

      <table>
        <tr>
          <td align="right">Media Type Identifier:</td>
          <td>${mt.jsonMediaType}</td>
        </tr>
        <tr>
          <td align="right">Root Element:</td>
          <td><a href="${ns2prefix[mt.rootElement.namespace]}_el_${mt.rootElement.name}_json.html">${mt.rootElement.name}</a></td>
        </tr>
        [#if mt.version??]
        <tr>
          <td align="right">Version:</td>
          <td>${mt.version}</td>
        </tr>
        [/#if]
      </table>

      ${mt.rootElement.docValue!""}

      <h3>Example</h3>
      <pre class="prettyprint lang-xml">
${generateExampleJson(mt.rootElement)?html}
      </pre>

      <h3>Data Types</h3>

      <ul>
        [#list mt.dataTypes as type]
        <li><a href="${ns2prefix[type.namespace]}_${type.name}_json.html">${type.name}</a></li>
        [/#list]
      </ul>

      [#assign elementList=mt.elements/]
      [#if elementList?size > 0]
      <h3>Extension Elements</h3>

      <p>The ${mt.name} JSON media type defines the following elements that may be used as extension elements:</p>

      <table>
        <tr>
          <th>member name</th>
          <th>type</th>
          <th>description</th>
        </tr>
        [#list elementList as element]
        <tr>
          <td>${jsonExtensionElementName(element)}</td>
          [#if element.typeDefinition??]
            [#assign typeQName=element.typeDefinition.qname/]
          [#else]
            [#assign typeQName=element.elementXmlType.qname/]
          [/#if]
          [#if ns2schema[typeQName.namespaceURI]??]
          <td><a href="${baseProjectUri(typeQName.namespaceURI)}${ns2schema[typeQName.namespaceURI].id}_${typeQName.localPart}_json.html">${typeQName.namespaceURI}${typeQName.localPart}</a></td>
          [#else]
          <td>${typeQName.localPart?lower_case}</td>
          [/#if]
          <td>${element.docValue!""}</td>
        </tr>
        [/#list]
      </table>

      [/#if]

      <div class="clear" />
    </div>
    [@libBoilerplate.writeFooter/]
  </div> <!--! end of #container -->

  [@libBoilerplate.writeEndBody/]
[/#macro]
