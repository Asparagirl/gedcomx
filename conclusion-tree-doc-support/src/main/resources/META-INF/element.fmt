[#ftl]
[#--macro for writing a element page--]
[#import "boilerplate.fmt" as libBoilerplate/]
[#macro writeElementPage element]
  [#assign schema=schemaForNamespace(element)/]
  [#assign elementLabel=element.name?cap_first + " Element"/]
  [@libBoilerplate.writeStartBody label=elementLabel/]
  [@libBoilerplate.writeHeader]
    <ul class="clearfix" id="jsddm">
      <li><a id="brand" href="Home.html">FamilySearch APIs - Home</a></li>
      <li>
        <a href="models.html">Models &nbsp;&nbsp;&nbsp;&nbsp;&gt;</a>
        <ul>
          <li><a href="models.html">Models</a></li>
          <li><a href="resources.html">Resources</a></li>
          <li><a href="bindings.html">Path Bindings</a></li>
        </ul>
      </li>
      <li>
        <a href="${gedcomxExtensionRoot(schema.namespace)}${schema.id}.html">${schema.properties.label!("\"" + schema.id + "\" Model")} &nbsp;&nbsp;&nbsp;&nbsp;&gt;</a>
        <ul>
    [@forEachSchema var="sch"]
      [#if (sch.typeDefinitions?size > 0) || (sch.globalElements?size > 0)]
          <li><a href="${gedcomxExtensionRoot(sch.namespace)}${sch.id}.html">${sch.properties.label!("\"" + sch.id + "\" Model")}</a></li>
      [/#if]
    [/@forEachSchema]
        </ul>
      </li>
      <li class="current">
        <a href="#">${elementLabel}</a>
        <ul>
    [#list schema.globalElements?sort_by("name") as el]
          <li><a href="${gedcomxExtensionRoot(el)}${schema.id}_el_${el.name}.html">${el.name?cap_first} Element</a></li>
    [/#list]
        </ul>
      </li>
    </ul>
  [/@libBoilerplate.writeHeader]
<div class="wrap">
  <article id="subject" class="clearfix">
    <div class="feature-content clearfix">
      <h1>${elementLabel}</h1>

      <hr/>

      <table>
        <tr>
          <td align="right">Type:</td>
          <td><a href="${gedcomxExtensionRoot(element.typeDefinition)}${schemaForNamespace(element.typeDefinition).id}_${element.typeDefinition.name}.html">${element.typeDefinition.namespace}${element.typeDefinition.name}</a></td>
        </tr>
        <tr>
          <td align="right">Name:</td>
          <td>${element.name}</td>
        </tr>
        <tr>
          <td align="right">Namespace:</td>
          <td>${element.namespace}</td>
        </tr>
        <tr>
          <td align="right">JSON Name:</td>
          <td>${jsonExtensionElementName(element)}</td>
        </tr>
      </table>

      <h3>Description</h3>

      <p>${element.docValue!""}</p>

      <h3>Media Types</h3>

      <p>Pick your favorite representation format.</p>

      <div id="mediatype-selection">
        <input type="radio" id="select-xml" name="mediatype" checked="checked"/><label for="select-xml">XML</label>
        <input type="radio" id="select-json" name="mediatype" /><label for="select-json">JSON</label>
      </div>

      <div class="xml-docs">
        <h3>Example</h3>
        <pre class="prettyprint lang-xml">
${generateExampleXml(element)?html}
        </pre>
      </div>

      <div class="json-docs">
        <h3>Example</h3>
        <pre class="prettyprint lang-js">
${generateExampleJson(element)}
        </pre>
      </div>
    </div>
  </article>
</div>
  [@libBoilerplate.writeFooter/]
  [@libBoilerplate.writeEndBody/]
[/#macro]